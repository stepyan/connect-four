{"ast":null,"code":"class WinningConditions {\n  constructor() {\n    winConditions = [];\n    checkConditions = [[0, 6, 1], [7, 13, 1], [14, 20, 1], [21, 27, 1], [28, 34, 1], [35, 41, 1], [0, 35, 7], [1, 36, 7], [2, 37, 7], [3, 38, 7], [4, 39, 7], [5, 40, 7], [6, 41, 7], [3, 21, 6], [4, 28, 6], [5, 31, 6], [6, 36, 6], [13, 37, 6], [14, 38, 8], [7, 39, 8], [0, 40, 8], [1, 41, 8], [2, 34, 8], [3, 27, 8]];\n  }\n\n  getAllWinConditions() {\n    if (winConditions.length > 0) {\n      return winConditions;\n    }\n\n    for (let k = 0; k < checkConditions.length; k++) {\n      const arr = checkConditions[k];\n      const init = arr[0];\n      const fin = arr[1];\n      const diff = arr[2];\n      const numConditions = (fin - init) / diff - 2;\n\n      for (let i = 0; i < numConditions; i++) {\n        let nextArr = [];\n\n        for (let j = 0; j < 4; j++) {\n          nextArr.push(init + diff * (i + j));\n        }\n\n        winConditions.push(nextArr);\n      }\n    }\n\n    return winConditions;\n  }\n\n}\n\nlet winningConditions = new WinningConditions();\nexport default winningConditions;","map":{"version":3,"sources":["/Users/ryzm/Desktop/connect-four/src/WinningConditions.js"],"names":["WinningConditions","constructor","winConditions","checkConditions","getAllWinConditions","length","k","arr","init","fin","diff","numConditions","i","nextArr","j","push","winningConditions"],"mappings":"AAAA,MAAMA,iBAAN,CAAwB;AACtBC,EAAAA,WAAW,GAAE;AACXC,IAAAA,aAAa,GAAG,EAAhB;AACAC,IAAAA,eAAe,GAAG,CAChB,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CADgB,EAEhB,CAAC,CAAD,EAAG,EAAH,EAAM,CAAN,CAFgB,EAGhB,CAAC,EAAD,EAAI,EAAJ,EAAO,CAAP,CAHgB,EAIhB,CAAC,EAAD,EAAI,EAAJ,EAAO,CAAP,CAJgB,EAKhB,CAAC,EAAD,EAAI,EAAJ,EAAO,CAAP,CALgB,EAMhB,CAAC,EAAD,EAAI,EAAJ,EAAO,CAAP,CANgB,EAOhB,CAAC,CAAD,EAAG,EAAH,EAAM,CAAN,CAPgB,EAQhB,CAAC,CAAD,EAAG,EAAH,EAAM,CAAN,CARgB,EAShB,CAAC,CAAD,EAAG,EAAH,EAAM,CAAN,CATgB,EAUhB,CAAC,CAAD,EAAG,EAAH,EAAM,CAAN,CAVgB,EAWhB,CAAC,CAAD,EAAG,EAAH,EAAM,CAAN,CAXgB,EAYhB,CAAC,CAAD,EAAG,EAAH,EAAM,CAAN,CAZgB,EAahB,CAAC,CAAD,EAAG,EAAH,EAAM,CAAN,CAbgB,EAchB,CAAC,CAAD,EAAG,EAAH,EAAM,CAAN,CAdgB,EAehB,CAAC,CAAD,EAAG,EAAH,EAAM,CAAN,CAfgB,EAgBhB,CAAC,CAAD,EAAG,EAAH,EAAM,CAAN,CAhBgB,EAiBhB,CAAC,CAAD,EAAG,EAAH,EAAM,CAAN,CAjBgB,EAkBhB,CAAC,EAAD,EAAI,EAAJ,EAAO,CAAP,CAlBgB,EAmBhB,CAAC,EAAD,EAAI,EAAJ,EAAO,CAAP,CAnBgB,EAoBhB,CAAC,CAAD,EAAG,EAAH,EAAM,CAAN,CApBgB,EAqBhB,CAAC,CAAD,EAAG,EAAH,EAAM,CAAN,CArBgB,EAsBhB,CAAC,CAAD,EAAG,EAAH,EAAM,CAAN,CAtBgB,EAuBhB,CAAC,CAAD,EAAG,EAAH,EAAM,CAAN,CAvBgB,EAwBhB,CAAC,CAAD,EAAG,EAAH,EAAM,CAAN,CAxBgB,CAAlB;AA0BD;;AACDC,EAAAA,mBAAmB,GAAE;AACnB,QAAGF,aAAa,CAACG,MAAd,GAAuB,CAA1B,EAA4B;AAC1B,aAAOH,aAAP;AACD;;AACD,SAAI,IAAII,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGH,eAAe,CAACE,MAAnC,EAA2CC,CAAC,EAA5C,EAA+C;AAC7C,YAAMC,GAAG,GAAGJ,eAAe,CAACG,CAAD,CAA3B;AACA,YAAME,IAAI,GAAGD,GAAG,CAAC,CAAD,CAAhB;AACA,YAAME,GAAG,GAAGF,GAAG,CAAC,CAAD,CAAf;AACA,YAAMG,IAAI,GAAGH,GAAG,CAAC,CAAD,CAAhB;AACA,YAAMI,aAAa,GAAG,CAACF,GAAG,GAAGD,IAAP,IAAaE,IAAb,GAAoB,CAA1C;;AACA,WAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGD,aAAnB,EAAkCC,CAAC,EAAnC,EAAsC;AACpC,YAAIC,OAAO,GAAG,EAAd;;AACA,aAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,CAAnB,EAAsBA,CAAC,EAAvB,EAA0B;AACxBD,UAAAA,OAAO,CAACE,IAAR,CAAaP,IAAI,GAAGE,IAAI,IAAIE,CAAC,GAAGE,CAAR,CAAxB;AACD;;AACDZ,QAAAA,aAAa,CAACa,IAAd,CAAmBF,OAAnB;AACD;AACF;;AACD,WAAOX,aAAP;AACD;;AAjDqB;;AAoDxB,IAAIc,iBAAiB,GAAG,IAAIhB,iBAAJ,EAAxB;AACA,eAAegB,iBAAf","sourcesContent":["class WinningConditions {\n  constructor(){\n    winConditions = []\n    checkConditions = [\n      [0,6,1],\n      [7,13,1],\n      [14,20,1],\n      [21,27,1],\n      [28,34,1],\n      [35,41,1],\n      [0,35,7],\n      [1,36,7],\n      [2,37,7],\n      [3,38,7],\n      [4,39,7],\n      [5,40,7],\n      [6,41,7],\n      [3,21,6],\n      [4,28,6],\n      [5,31,6],\n      [6,36,6],\n      [13,37,6],\n      [14,38,8],\n      [7,39,8],\n      [0,40,8],\n      [1,41,8],\n      [2,34,8],\n      [3,27,8]\n    ]\n  }\n  getAllWinConditions(){\n    if(winConditions.length > 0){\n      return winConditions;\n    }\n    for(let k = 0; k < checkConditions.length; k++){\n      const arr = checkConditions[k]\n      const init = arr[0];\n      const fin = arr[1];\n      const diff = arr[2];\n      const numConditions = (fin - init)/diff - 2;\n      for(let i = 0; i < numConditions; i++){\n        let nextArr = [];\n        for(let j = 0; j < 4; j++){\n          nextArr.push(init + diff * (i + j));\n        }\n        winConditions.push(nextArr);\n      }\n    }\n    return winConditions;\n  }\n}\n\nlet winningConditions = new WinningConditions()\nexport default winningConditions;"]},"metadata":{},"sourceType":"module"}